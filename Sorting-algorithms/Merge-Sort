def merge(left, right):
    new = []
    i, j = 0, 0
    print(f"Merging {left} and {right}")
    
    while i < len(left) and j < len(right):
        if left[i] < right[j]:
            new.append(left[i])
            i += 1
        else:
            new.append(right[j])
            j += 1
    
    new.extend(left[i:])
    new.extend(right[j:])
    
    print(f"Merged into: {new}")
    return new

def merge_sort(arr):
    print(f"Sorting: {arr}")
    if len(arr) <= 1:
        return arr
    
    mid = len(arr) // 2
    l_half = arr[:mid]
    r_half = arr[mid:]
    
    # Recursively divide and sort the left and right halves
    l_half = merge_sort(l_half)
    r_half = merge_sort(r_half)
    
    # Merge the two sorted halves
    return merge(l_half, r_half)

# Taking user input
arr = list(map(int, input("Enter the elements of the array, separated by spaces: ").split()))

# Call merge_sort and print the sorted array
sorted_array = merge_sort(arr)
print(f"Sorted array: {sorted_array}")
